{"version":3,"sources":["components/Todo.js","App.js","index.js"],"names":["Wrapper","styled","div","Form","form","Button","button","List","ul","Task","li","props","completed","Todo","useState","tasks","setTasks","generateId","reduce","max","curr","Math","id","onSubmit","e","preventDefault","input","target","elements","value","trim","edit","focus","type","name","autoComplete","map","task","onClick","editTask","stopPropagation","filter","removeTask","setToEditTask","GlobalStyle","createGlobalStyle","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OA6GA,I,EAAMA,EAAUC,IAAOC,IAAV,uEAIPC,EAAOF,IAAOG,KAAV,8OAeJC,EAASJ,IAAOK,OAAV,uLAWNC,EAAON,IAAOO,GAAV,sEAIJC,EAAOR,IAAOS,GAAV,qQAOY,SAACC,GAAD,OAAYA,EAAMC,UAAY,OAAS,YAQ9CC,EA3Jf,WAAiB,IAAD,EACYC,mBAAS,IADrB,mBACPC,EADO,KACAC,EADA,KAqERC,EAAa,SAACF,GAAD,OACjBA,EAAMG,QAAO,SAACC,EAAKC,GAAN,OAAeC,KAAKF,IAAIA,EAAKC,EAAKE,OAAM,GAAK,GAE5D,OACE,eAACtB,EAAD,WACE,eAACG,EAAD,CAAMoB,SAvEM,SAACC,GACfA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAAS,aAC1BC,EAAQH,EAAMG,MAAMC,OAC1BD,GACEb,EAAS,GAAD,mBACHD,GADG,CAEN,CACEO,GAAIL,EAAWF,GACfH,WAAW,EACXmB,MAAM,EACNF,YAGNH,EAAMG,MAAQ,GACdH,EAAMM,SAwDJ,UACE,uBAAOC,KAAK,OAAOC,KAAK,YAAYC,aAAa,QACjD,cAAC9B,EAAD,qBAEF,cAACE,EAAD,UACGQ,EAAMqB,KAAI,SAACC,GAAD,OACT,eAAC5B,EAAD,CAEEG,UAAWyB,EAAKzB,UAChB0B,QAAS,kBAzDMhB,EAyDgBe,EAAKf,QAxD5CN,EACED,EAAMqB,KAAI,SAACC,GAAD,OACRA,EAAKf,KAAOA,EAAZ,2BAESe,GAFT,IAGMzB,WAAYyB,EAAKzB,YAEnByB,MARc,IAACf,GAsDjB,UAKGe,EAAKN,KACJ,eAAC5B,EAAD,CAAMoB,SAAU,SAACC,GAAD,OAjCX,SAACA,EAAGF,GACnBE,EAAEC,iBACF,IACMI,EADQL,EAAEG,OAAOC,SAAS,aACZC,MAAMC,OAC1Bd,EACED,EAAMqB,KAAI,SAACC,GAAD,OACRA,EAAKf,KAAOA,EAAZ,2BAESe,GAFT,IAGMN,MAAOM,EAAKN,KACZF,UAEFQ,MAqByBE,CAASf,EAAGa,EAAKf,KAAxC,UACE,uBAAOW,KAAK,OAAOC,KAAK,cACxB,cAAC7B,EAAD,sBAGFgC,EAAKR,MAEP,gCACE,cAACxB,EAAD,CAAQiC,QAAS,SAACd,GAAD,OAzEV,SAACA,EAAGF,GACrBE,EAAEgB,kBACFxB,EAASD,EAAM0B,QAAO,SAACJ,GAAD,OAAUA,EAAKf,KAAOA,MAuEVoB,CAAWlB,EAAGa,EAAKf,KAA3C,oBACA,cAACjB,EAAD,CAAQiC,QAAS,SAACd,GAAD,OAxDP,SAACA,EAAGF,GACxBE,EAAEgB,kBACFxB,EACED,EAAMqB,KAAI,SAACC,GAAD,OACRA,EAAKf,KAAOA,EAAZ,2BAESe,GAFT,IAGMN,MAAOM,EAAKN,OAEdM,MA+C0BM,CAAcnB,EAAGa,EAAKf,KAA9C,SACGe,EAAKN,KAAO,UAAY,cAfxBM,EAAKf,aCjFhBsB,EAAcC,YAAH,qIAkBFC,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACH,EAAD,IACA,cAAC,EAAD,QCZNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5592e4b6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nfunction Todo() {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements['task-name'];\r\n    const value = input.value.trim();\r\n    value &&\r\n      setTasks([\r\n        ...tasks,\r\n        {\r\n          id: generateId(tasks),\r\n          completed: false,\r\n          edit: false,\r\n          value,\r\n        },\r\n      ]);\r\n    input.value = '';\r\n    input.focus();\r\n  };\r\n\r\n  const removeTask = (e, id) => {\r\n    e.stopPropagation();\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  const toggleCompleted = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id\r\n          ? {\r\n              ...task,\r\n              completed: !task.completed,\r\n            }\r\n          : task,\r\n      ),\r\n    );\r\n  };\r\n\r\n  const setToEditTask = (e, id) => {\r\n    e.stopPropagation();\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id\r\n          ? {\r\n              ...task,\r\n              edit: !task.edit,\r\n            }\r\n          : task,\r\n      ),\r\n    );\r\n  };\r\n\r\n  const editTask = (e, id) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements['task-name'];\r\n    const value = input.value.trim();\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id\r\n          ? {\r\n              ...task,\r\n              edit: !task.edit,\r\n              value,\r\n            }\r\n          : task,\r\n      ),\r\n    );\r\n  };\r\n  const generateId = (tasks) =>\r\n    tasks.reduce((max, curr) => Math.max(max, curr.id), -1) + 1;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={addTask}>\r\n        <input type='text' name='task-name' autoComplete='off'></input>\r\n        <Button>Add</Button>\r\n      </Form>\r\n      <List>\r\n        {tasks.map((task) => (\r\n          <Task\r\n            key={task.id}\r\n            completed={task.completed}\r\n            onClick={() => toggleCompleted(task.id)}\r\n          >\r\n            {task.edit ? (\r\n              <Form onSubmit={(e) => editTask(e, task.id)}>\r\n                <input type='text' name='task-name'></input>\r\n                <Button>Save</Button>\r\n              </Form>\r\n            ) : (\r\n              task.value\r\n            )}\r\n            <div>\r\n              <Button onClick={(e) => removeTask(e, task.id)}>Remove</Button>\r\n              <Button onClick={(e) => setToEditTask(e, task.id)}>\r\n                {task.edit ? 'No_Edit' : 'Edit'}\r\n              </Button>\r\n            </div>\r\n          </Task>\r\n        ))}\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  input {\r\n    width: 100%;\r\n    margin-right: 10px;\r\n    padding: 0 8px;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    height: 35px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0 8px;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  margin-left: 8px;\r\n  height: 35px;\r\n  &:first-of-type {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  margin-top: 10px;\r\n`;\r\nconst Task = styled.li`\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n  padding: 4px 8px;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${(props) => (props.completed ? 'lime' : 'tomato')};\r\n\r\n  div {\r\n    display: flex;\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nexport default Todo;\r\n","import Todo from './components/Todo';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'sans-serif'\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <GlobalStyle />\r\n      <Todo />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}