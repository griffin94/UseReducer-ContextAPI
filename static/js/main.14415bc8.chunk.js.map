{"version":3,"sources":["state/todo/actionTypes.js","state/reducer.js","state/todo/initialState.js","state/initialState.js","state/StateProvider.js","state/todo/actionCreators.js","components/Todo.js","App.js","index.js"],"names":["ADD_TASK","REMOVE_TASK","CHANGE_TASK","reducer","state","type","payload","tasks","filter","task","id","key","value","undefined","map","todoState","initialState","StateContext","React","createContext","StateProvider","children","useReducer","dispatch","actions","addTask","removeTask","changeTask","Provider","Wrapper","styled","div","Form","form","Button","button","List","ul","Task","li","completed","Todo","selector","useContext","Error","useStateSelector","generateId","reduce","max","curr","Math","onSubmit","e","preventDefault","input","target","elements","trim","edit","focus","name","autoComplete","onClick","currentTarget","find","toggleCompleted","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14415bc8.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK';\r\nexport const REMOVE_TASK = 'REMOVE_TASK';\r\nexport const CHANGE_TASK = 'CHANGE_TASK';\r\n","import { ADD_TASK, REMOVE_TASK, CHANGE_TASK } from './todo/actionTypes';\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return { ...state, tasks: [...state.tasks, payload] };\r\n\r\n    case REMOVE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [...state.tasks.filter((task) => task.id !== payload)],\r\n      };\r\n\r\n    case CHANGE_TASK: {\r\n      const key = payload?.key,\r\n        value = payload?.value;\r\n      if (key !== undefined && value !== undefined) {\r\n        return {\r\n          ...state,\r\n          tasks: [\r\n            ...state.tasks.map((task) =>\r\n              task.id === payload.id\r\n                ? {\r\n                    ...task,\r\n                    [payload.key]: payload.value,\r\n                  }\r\n                : task,\r\n            ),\r\n          ],\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","const todoState = {\r\n  tasks: [],\r\n};\r\n\r\nexport default todoState;\r\n","import todoState from './todo/initialState';\r\n\r\nconst initialState = {\r\n  ...todoState,\r\n};\r\n\r\nexport default initialState;\r\n","import React, { useReducer, useContext } from 'react';\r\nimport reducer from './reducer';\r\nimport initialState from './initialState';\r\nimport { addTask, removeTask, changeTask } from './todo/actionCreators';\r\n\r\nconst StateContext = React.createContext({});\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const actions = {\r\n    addTask: (payload) => dispatch(addTask(payload)),\r\n    removeTask: (payload) => dispatch(removeTask(payload)),\r\n    changeTask: (payload) => dispatch(changeTask(payload)),\r\n  };\r\n\r\n  return (\r\n    <StateContext.Provider value={{ state, actions }}>\r\n      {children}\r\n    </StateContext.Provider>\r\n  );\r\n};\r\n\r\nconst useStateActions = () => useContext(StateContext).actions;\r\n\r\nconst useStateSelector = (selector) => {\r\n  const { state } = useContext(StateContext);\r\n\r\n  if (!selector) return state;\r\n  else if (typeof selector !== 'function')\r\n    throw new Error('Selector must be a function');\r\n  else {\r\n    return selector(state);\r\n  }\r\n};\r\n\r\nexport { StateProvider, useStateActions, useStateSelector };\r\n","import { ADD_TASK, REMOVE_TASK, CHANGE_TASK } from './actionTypes';\r\n\r\nexport const addTask = (payload) => ({ type: ADD_TASK, payload });\r\nexport const removeTask = (payload) => ({ type: REMOVE_TASK, payload });\r\nexport const changeTask = (payload) => ({ type: CHANGE_TASK, payload });\r\n","import styled from 'styled-components';\r\nimport { useStateActions, useStateSelector } from '../state/StateProvider';\r\n\r\nconst Todo = () => {\r\n  const tasks = useStateSelector((state) => state.tasks);\r\n  const { addTask, removeTask, changeTask } = useStateActions();\r\n\r\n  const addTodo = (e) => {\r\n    e.preventDefault();\r\n    const input = e.target.elements['task-name'];\r\n    const value = input.value.trim();\r\n    value &&\r\n      addTask({\r\n        id: generateId(tasks),\r\n        completed: false,\r\n        edit: false,\r\n        value,\r\n      });\r\n    input.value = '';\r\n    input.focus();\r\n  };\r\n\r\n  const toggleCompleted = (e, id) => {\r\n    e.target === e.currentTarget &&\r\n      changeTask({\r\n        id,\r\n        key: 'completed',\r\n        value: !tasks.find((task) => task.id === id).completed,\r\n      });\r\n  };\r\n\r\n  const setTaskToEdit = (id) =>\r\n    changeTask({\r\n      id,\r\n      key: 'edit',\r\n      value: !tasks.find((task) => task.id === id).edit,\r\n    });\r\n\r\n  // const editTask = (e, id) => {\r\n  //   e.preventDefault();\r\n  //   const input = e.target.elements['task-name'];\r\n  //   const value = input.value.trim();\r\n  //   setTasks(\r\n  //     tasks.map((task) =>\r\n  //       task.id === id\r\n  //         ? {\r\n  //             ...task,\r\n  //             edit: !task.edit,\r\n  //             value,\r\n  //           }\r\n  //         : task,\r\n  //     ),\r\n  //   );\r\n  // };\r\n  const generateId = (tasks) =>\r\n    tasks.reduce((max, curr) => Math.max(max, curr.id), -1) + 1;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Form onSubmit={addTodo}>\r\n        <input type='text' name='task-name' autoComplete='off'></input>\r\n        <Button>Add</Button>\r\n      </Form>\r\n      <List>\r\n        {tasks.map((task) => (\r\n          <Task\r\n            key={task.id}\r\n            completed={task.completed}\r\n            onClick={(e) => toggleCompleted(e, task.id)}\r\n          >\r\n            {task.edit ? (\r\n              <Form\r\n                onSubmit={\r\n                  undefined\r\n                  // (e) => editTask(e, task.id)\r\n                }\r\n              >\r\n                <input type='text' name='task-name' autoComplete='off'></input>\r\n                <Button>Save</Button>\r\n              </Form>\r\n            ) : (\r\n              task.value\r\n            )}\r\n            <div>\r\n              <Button onClick={() => removeTask(task.id)}>Remove</Button>\r\n              <Button onClick={() => setTaskToEdit(task.id)}>\r\n                {task.edit ? 'No_Edit' : 'Edit'}\r\n              </Button>\r\n            </div>\r\n          </Task>\r\n        ))}\r\n      </List>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 400px;\r\n  margin: 20px auto;\r\n`;\r\nconst Form = styled.form`\r\n  display: flex;\r\n  width: 100%;\r\n\r\n  input {\r\n    width: 100%;\r\n    margin-right: 10px;\r\n    padding: 0 8px;\r\n    border: 1px solid black;\r\n    border-radius: 8px;\r\n    outline: none;\r\n    height: 35px;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 0 8px;\r\n  border: 1px solid black;\r\n  border-radius: 6px;\r\n  margin-left: 8px;\r\n  height: 35px;\r\n  &:first-of-type {\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  margin-top: 10px;\r\n`;\r\nconst Task = styled.li`\r\n  border: 1px solid black;\r\n  border-radius: 8px;\r\n  padding: 4px 8px;\r\n  margin-bottom: 8px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: ${({ completed }) => (completed ? 'lime' : 'tomato')};\r\n\r\n  div {\r\n    display: flex;\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nexport default Todo;\r\n","import Todo from './components/Todo';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { StateProvider } from './state/StateProvider';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'sans-serif'\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <StateProvider>\r\n      <GlobalStyle />\r\n      <Todo />\r\n    </StateProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}